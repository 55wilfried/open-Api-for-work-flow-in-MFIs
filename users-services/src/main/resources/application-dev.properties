spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=banque;encrypt=false;trustServerCertificate=true;

spring.datasource.username=OPENAPI
spring.datasource.password=SA@1T3CH
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

spring.jpa.hibernate.ddl-auto = update
logger.info("Request path: {}", requestPath);
logger.info("Authorization header: {}", exchange.getRequest().getHeaders().getFirst(HttpHeaders.AUTHORIZATION));
Debug logging
logging.level.org.springframework=DEBUG
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/keycloak
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8180/realms/microfinance-realm/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8180/realms/microfinance-realm/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8180/realms/microfinance-realm/protocol/openid-connect/certs
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# Kafka Configuration (Fixed the bootstrap server)
#spring.kafka.bootstrap-servers=kafka:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

