version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    networks:
      - mfi-net


  # Auth Service
  auth-services:
    build:
      context: ./auth-services
    container_name: auth-services
    ports:
      - "8081:8081"
    networks:
      - mfi-net

  # Clients Service
  client-services:
    build:
      context: ./client-services
    container_name: client-services
    ports:
      - "8082:8082"
    networks:
      - mfi-net

  # Users Service
  users-services:
    build:
      context: ./users-services
    container_name: users-services
    ports:
      - "8083:8083"
    networks:
      - mfi-net

  # Transactions Service
  transaction-services:
    build:
      context: ./transaction-services
    container_name: transaction-services
    ports:
      - "8084:8084"
    networks:
      - mfi-net

  # Reporting Service
  reporting-services:
    build:
      context: ./reporting-services
    container_name: reporting-services
    ports:
      - "8085:8085"
    networks:
      - mfi-net

  # Loans Service
  loans-services:
    build:
      context: ./loans-services
    container_name: loans-services
    ports:
      - "8086:8086"
    networks:
      - mfi-net

  # Eureka / Register Service
  register:
    build:
      context: ./register
    container_name: register
    ports:
      - "8761:8761"
    networks:
      - mfi-net


  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - mfi-net

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9999:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - mfi-net

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - mfi-net

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - mfi-net

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    hostname: prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - mfi-net
    ports:
      - "9090:9090"
    depends_on:
      - kafka
      - api-gateway
      - users-services
      - auth-services
      - client-services
      - transaction-services
      - reporting-services
      - loans-services
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    networks:
      - mfi-net
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus




networks:
  mfi-net:
    external: true
